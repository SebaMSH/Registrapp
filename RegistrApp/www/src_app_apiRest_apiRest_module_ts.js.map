{"version":3,"file":"src_app_apiRest_apiRest_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAA6C;AACE;AACN;AACM;AACF;AACA;AAC7C,gDAAgD;IAYnC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAV7B,uDAAQ,CAAC;QACN,OAAO,EAAE;YACL,uDAAW;YACX,yDAAY;YACZ,uDAAW;YACX,kEAAqB,CAAC,CAAC,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sDAAW,EAAC,CAAC,CAAC;YAC3D,mBAAmB;SACtB;QACH,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AClBkB;AAEM;IAOzC,WAAW,SAAX,WAAW;IAIpB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QACxC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IACxD,CAAC;IAED,QAAQ;IAER,CAAC;CACJ;;YAlBO,gEAAW;;AAON,WAAW;IALvB,wDAAS,CAAC;QACP,QAAQ,EAAE,aAAa;QACvB,6LAAgC;;KAEnC,CAAC;GACW,WAAW,CAWvB;AAXuB;;;;;;;;;;;;;;;;;;;ACTiB;AACqB;IAcjD,WAAW,SAAX,WAAW;IAUtB,YACY,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAJ3B,YAAO,GAAG,4CAA4C,CAAC;IAItB,CAAC;IAEzC,SAAS;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAE,CAAC;IAC5C,CAAC;IAED,eAAe,CAAC,EAAE;QAChB,IAAI,SAAS,GAAC,IAAI,CAAC,OAAO,GAAE,UAAU,GAAC,EAAE,CAAC;QAC1C,KAAK,CAAC,UAAU,GAAC,SAAS,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,CAAE,CAAC;IACzC,CAAC;IACF,YAAY,CAAC,EAAE;QAEZ,IAAI,SAAS,GAAC,IAAI,CAAC,OAAO,GAAE,GAAG,GAAC,EAAE,CAAC;QACnC,KAAK,CAAC,UAAU,GAAC,SAAS,CAAC,CAAC;QAC5B,OAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,SAAS,CAAC,CAAC;IACjD,CAAC;CAEA;;YA3CO,4DAAU;;AAcL,WAAW;IALvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GAGW,WAAW,CA6BvB;AA7BuB;;;;;;;;;;;;;;;ACfxB,iEAAe,ujBAAujB,4BAA4B,uMAAuM,aAAa,YAAY,iEAAiE,YAAY,8VAA8V,aAAa,aAAa,wEAAwE,aAAa,iFAAiF","sources":["./src/app/apiRest/apiRest.module.ts","./src/app/apiRest/apiRest.page.ts","./src/app/servicios/rest.service.ts","./src/app/apiRest/apiRest.page.html"],"sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ApiRestPage } from './apiRest.page';\n// import {NgxMasonryModule} from 'ngx-masonry';\n\n@NgModule({\n    imports: [\n        IonicModule,\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild([{path: '', component: ApiRestPage}]),\n        // NgxMasonryModule\n    ],\n  declarations: [ApiRestPage]\n})\nexport class ApiRestPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {RestService} from '../servicios/rest.service';\n\n@Component({\n    selector: 'app-apiRest',\n    templateUrl: 'apiRest.page.html',\n    styleUrls: ['apiRest.page.scss']\n})\nexport class ApiRestPage implements OnInit {\n    \n    public datosObservable: Observable<any>;\n\n    constructor(private restService: RestService) {\n        this.datosObservable = this.restService.get_Datos();\n    }\n\n    ngOnInit() {\n\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport { Observable} from 'rxjs';\r\n\r\n\r\ninterface Dato {\r\n}\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class RestService {\r\n\r\n  dato:Dato;\r\n\r\n\r\n\r\n\r\n  public baseUrl = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n\r\n  constructor(\r\n      private httpClient: HttpClient ) {  }\r\n      \r\n  get_Datos() {\r\n    return this.httpClient.get(this.baseUrl );\r\n  }\r\n\r\n  get_DatosUserId(id) {\r\n    let stringUrl=this.baseUrl +'?userId='+id;\r\n    alert(\"----->>>\"+stringUrl);\r\n    return this.httpClient.get(stringUrl );\r\n  }\r\n get_DatosPos(id): Observable<Dato>{\r\n  \r\n    let stringUrl=this.baseUrl +'/'+id;\r\n    alert(\"----->>>\"+stringUrl);\r\n    return  this.httpClient.get<Dato>(stringUrl);\r\n}\r\n\r\n}","export default \"<ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-button color=\\\"primary\\\">Listado Docentes</ion-button>\\n        </ion-buttons>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-button color=\\\"primary\\\" routerLink=\\\"/home\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<!-- <ion-content [ngClass]=\\\"'blogcontainer'\\\">\\n    <ngx-masonry [useImagesLoaded]=\\\"true\\\" [options]=\\\"{ transitionDuration: '0.8s' }\\\">\\n        <ion-card ngxMasonryItem class=\\\"masonry-item welcome-card\\\" *ngFor=\\\"let datos of datosObservable | async\\\">\\n        \\n            <ion-card-header>\\n                <ion-card-title>{{datos.id}} {{datos.name}}</ion-card-title>\\n            </ion-card-header>\\n            {{datos.body}}\\n        </ion-card>\\n    </ngx-masonry>\\n</ion-content> -->\\n\\n\\n\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n    <ion-list *ngFor=\\\"let datos of datosObservable | async\\\">  \\n      <ion-item >\\n        <ion-avatar slot=\\\"start\\\">\\n          <ion-img src= \\\"assets/img/avatar.png\\\"></ion-img>\\n        </ion-avatar>\\n        <ion-label>\\n            {{datos.id}} {{datos.name}} \\n        </ion-label>\\n        <ion-label slot=\\\"end\\\">\\n            {{datos.email}}\\n        </ion-label>\\n      </ion-item>  \\n    </ion-list>\\n</ion-content>\\n  \";"],"names":[],"sourceRoot":"webpack:///"}